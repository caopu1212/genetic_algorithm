
"""
正如组合问题与动态规划的联系之应用提到的从起点(0,0)到终点(X,Y)一共有多少种走法。与之相似的另一个问题是如何找到从(0,0)到(X,Y)的路径？
首先对问题建模。使用一个矩阵(二维数组)的下标 表示 各个点的坐标。矩阵元素只取 0 或者 1，0 表示此坐标是一个可达的正常顶点；而 1 则表示这是一个不可达的障碍顶点

"""

"""
TODO LIST
映射,编码 规则：                           
√1.路径上下左右对应00,01,10,11

杂交方案：
1.  在交叉时 随机获得父的一个点，然后找到母最后一次经过这个点的地方，  前半用父的，后半用母的， 拼成子代
2.  在交叉时 取父 中间位置的一个点，剩下同1 
3.  找到父的第一次出现重复的点的第一个的位置如：list[1,4,2,3,4,1,0], 则取list[1]，剩下同1
√4.  父中随机找一个点，取这个点第一次出现的位置（同3），剩下同1 

突变方案：
√1.  选取杂交时的开始的点，从那开始生成一条随机的通往终点的路径，最后拼起来
2   

# @@.随机连接起点到终点 路径的 函数                 ********（done）**********
# @@.写编码解码的函数                                ********（done）**********
# @@.计算fitness的函数（步数越短fitness越高，杂交完之后验证可否走通，走不通的fitness为0）   ********（done）**********
# @@.优化路线生成（防止重复左右横跳） ********（half done）**********
"""








